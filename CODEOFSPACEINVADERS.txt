import pygame
import random
import math
from pygame import mixer

# initialise pygame!!
pygame.init()

# screen
screen = pygame.display.set_mode((800, 600))

# BACKGROUND
background = pygame.image.load('stars.jpg')

# backgroundsound
mixer.music.load('background.wav')
mixer.music.play(-1)

# title and icon
pygame.display.set_caption("Space Invaders")
icon = pygame.image.load('game.png')
pygame.display.set_icon(icon)

# player
playerImg = pygame.image.load('ship.png')
playerX = 370
playerY = 480
playerX_change = 0

# enemy
enemyImg = []
enemyX = []
enemyY = []
enemyX_change = []
enemyy_change = []
num_of_enemies = 6

for i in range(num_of_enemies):
 enemyImg.append(pygame.image.load('alien.png'))
 enemyX.append(random.randint(0, 800))
 enemyY.append(random.randint(50, 150))
 enemyX_change.append(3)
 enemyy_change.append(40)

# bullet
# ready - means u cant see bullet
# fire - bullet moving
bulletImg = pygame.image.load('bullet.png')
bulletX = 0
bulletY = 480
bulletX_change = 0
bulletY_change = 2
bullet_state = "ready"


#score
score_value = 0
font = pygame.font.Font('freesansbold.ttf' ,32)
textX=10
textY=10

# Game Over
over_font = pygame.font.Font('freesansbold.ttf', 64)

def game_over_text():
    over_text = over_font.render("GAME OVER", True, (255, 255, 255))
    screen.blit(over_text, (200, 250))


def show_score(x,y):
    score = font.render("Score : " + str(score_value), True , (255,255,255))
    screen.blit(score, (x, y))


def player(x, y):
    screen.blit(playerImg, (x, y))


def enemy(x, y , i):
    screen.blit(enemyImg[i], (x, y))


def fire_bullet(x, y):
    global bullet_state
    bullet_state = "fire"
    screen.blit(bulletImg, (x + 16, y + 10))


def isCollision(enemyX, enemyY, bulletX, bulletY):
    distance = math.sqrt((math.pow(enemyX - bulletX, 2)) + (math.pow(enemyY-bulletY, 2)))
    if distance<27:
        return True
    else:
        return False


# game loop
running = True
while running:

    # RGB
    screen.fill((0, 0, 0))

    # background image
    screen.blit(background, (0, 0))

    for event in pygame.event.get():

        if event.type == pygame.QUIT:
            running = False

        # -------------------------if a key is pressed check if Right or Left -------------------------
        if event.type == pygame.KEYDOWN:

            if event.key == pygame.K_LEFT:
                playerX_change = -5

            if event.key == pygame.K_RIGHT:
                playerX_change = 5

            if event.key == pygame.K_SPACE:
                if bullet_state is "ready":
                    bullet_sound = mixer.Sound('shoot.wav')
                    bullet_sound.play()
                    bulletX = playerX
                    fire_bullet(playerX, playerY)

            

        if event.type == pygame.KEYUP:
            if event.key == pygame.K_RIGHT or pygame.K_RIGHT:
                playerX_change = 0


    # ---------------------------------------------------------------------------------------------

    # boundary player------------------
    playerX += playerX_change

    if playerX <= 0:
        playerX = 0
    elif playerX >= 736:
        playerX = 736

    # boundary enemy--- MOVEMENT------------------

    for i in range(num_of_enemies):

        #   OVER
        #if enemyY[i] > 200:
          #  print("lol")
        # Game Over
      if enemyY[i] > 440:
            for j in range(num_of_enemies):
                enemyY[j] = 2000
            game_over_text()
            break


      enemyX[i] += enemyX_change[i]
      if enemyX[i] <= 0:
        enemyX_change[i] = 4
        enemyY[i] += enemyy_change[i]

      elif enemyX[i] >= 736:
        enemyX_change[i] = -4
        enemyY[i] += enemyy_change[i]

     # COLLISION
      collision = isCollision(enemyX[i], enemyY[i], bulletX, bulletY)
      if collision:
          bullet_sound = mixer.Sound('explosion.wav')
          bullet_sound.play()
          bulletY = 480
          bullet_state = "ready"
          score_value += 1
          print(score_value)
          enemyX[i] = random.randint(0, 735)
          enemyY[i] = random.randint(-10, 0)

      enemy(enemyX[i], enemyY[i] , i)

    # bullet Movement
      if bulletY <= 0:
          bulletY = 480
          bullet_state = "ready"

      if bullet_state is "fire":
        fire_bullet(bulletX, bulletY)
        bulletY -= bulletY_change

    player(playerX, playerY)
    show_score(textX,textX)
    pygame.display.update()
